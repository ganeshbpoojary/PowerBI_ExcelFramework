<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
<<<<<<< HEAD
  <suite started-at="2022-09-01T20:20:24 IST" name="Default suite" finished-at="2022-09-01T20:21:44 IST" duration-ms="79261">
    <groups>
    </groups>
    <test started-at="2022-09-01T20:20:24 IST" name="Default test" finished-at="2022-09-01T20:21:44 IST" duration-ms="79261">
      <class name="testlogic.BaseTestNG">
        <test-method is-config="true" signature="killProcess()[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:20:24 IST" name="killProcess" finished-at="2022-09-01T20:20:24 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:20:26 IST" name="beforeMethod" finished-at="2022-09-01T20:20:26 IST" duration-ms="149" status="PASS">
=======
  <suite started-at="2022-09-01T16:44:04 IST" name="Default suite" finished-at="2022-09-01T16:46:39 IST" duration-ms="154600">
    <groups>
    </groups>
    <test started-at="2022-09-01T16:44:04 IST" name="Default test" finished-at="2022-09-01T16:46:39 IST" duration-ms="154600">
      <class name="testlogic.BaseTestNG">
        <test-method is-config="true" signature="killProcess()[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:44:04 IST" name="killProcess" finished-at="2022-09-01T16:44:04 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:44:06 IST" name="beforeMethod" finished-at="2022-09-01T16:44:06 IST" duration-ms="180" status="PASS">
>>>>>>> b919795a66c20e6d87a3a7732d06e87b45586ef7
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testlogic.BaseTestNG.BaseTestNGExecutor(java.util.List)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
<<<<<<< HEAD
        <test-method signature="BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:20:26 IST" name="BaseTestNGExecutor" data-provider="DataProvider" finished-at="2022-09-01T20:20:58 IST" duration-ms="31973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{RowNumber=505, Description=TC74_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=login, TestCaseID=SupplierInsight_TC74, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=506, Description=TC74_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=gotoSupplierScore_Suppplier, TestCaseID=SupplierInsight_TC74, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=507, Description=TC74_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=validateChartHasAscendingMonths_Suppplier, TestCaseID=SupplierInsight_TC74, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}]]]>
=======
        <test-method signature="BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:44:06 IST" name="BaseTestNGExecutor" data-provider="DataProvider" finished-at="2022-09-01T16:45:11 IST" duration-ms="64788" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{RowNumber=374, Description=TC26_Check if the chart represents unit movement across weeks, CallSequence=login, TestCaseID=SpacePlan_TC26, Iteration=Iteration1, DataSheet=SPlanning_Testdata, SuiteFileName=C:\Users\1034514\PowerBI_New\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=375, Description=TC26_Check if the chart represents unit movement across weeks, CallSequence=verifymovementtab_Space, TestCaseID=SpacePlan_TC26, Iteration=Iteration1, DataSheet=SPlanning_Testdata, SuiteFileName=C:\Users\1034514\PowerBI_New\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}]]]>
>>>>>>> b919795a66c20e6d87a3a7732d06e87b45586ef7
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testlogic.BaseTestNG.BaseTestNGExecutor(BaseTestNG.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseTestNGExecutor -->
<<<<<<< HEAD
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:20:58 IST" name="afterMethod" finished-at="2022-09-01T20:20:59 IST" duration-ms="437" status="PASS">
=======
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:45:11 IST" name="afterMethod" finished-at="2022-09-01T16:45:11 IST" duration-ms="214" status="PASS">
>>>>>>> b919795a66c20e6d87a3a7732d06e87b45586ef7
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BaseTestNGExecutor on [BaseTestNG passed=0 failed=0 skipped=0] status=FAILURE method=BaseTestNG.BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
<<<<<<< HEAD
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:20:59 IST" name="beforeMethod" finished-at="2022-09-01T20:20:59 IST" duration-ms="1" status="PASS">
=======
        <test-method signature="BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:45:11 IST" name="BaseTestNGExecutor" data-provider="DataProvider" finished-at="2022-09-01T16:46:39 IST" duration-ms="87974" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{RowNumber=377, Description=TC27_Check if the chart represents unit movement across weeks, CallSequence=login, TestCaseID=SpacePlan_TC27, Iteration=Iteration1, DataSheet=SPlanning_Testdata, SuiteFileName=C:\Users\1034514\PowerBI_New\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=378, Description=TC27_Check if the chart represents unit movement across weeks, CallSequence=verifymovementtab_Space, TestCaseID=SpacePlan_TC27, Iteration=Iteration1, DataSheet=SPlanning_Testdata, SuiteFileName=C:\Users\1034514\PowerBI_New\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testlogic.BaseTestNG.BaseTestNGExecutor(BaseTestNG.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseTestNGExecutor -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:45:11 IST" name="beforeMethod" finished-at="2022-09-01T16:45:11 IST" duration-ms="0" status="PASS">
>>>>>>> b919795a66c20e6d87a3a7732d06e87b45586ef7
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testlogic.BaseTestNG.BaseTestNGExecutor(java.util.List)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
<<<<<<< HEAD
        <test-method signature="BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:20:59 IST" name="BaseTestNGExecutor" data-provider="DataProvider" finished-at="2022-09-01T20:21:43 IST" duration-ms="44565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{RowNumber=556, Description=TC85_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=login, TestCaseID=SupplierInsight_TC85, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=557, Description=TC85_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=gotoSupplierScore_Suppplier, TestCaseID=SupplierInsight_TC85, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=558, Description=TC85_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=goto_HowIsTheItemSupplierScoreTrendingAcrossMonths_Supplier, TestCaseID=SupplierInsight_TC85, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}, {RowNumber=559, Description=TC85_Supplier Score_Chart_Check if the X axis months are sorted in ascending order, CallSequence=validateChartHasAscendingMonths_Suppplier, TestCaseID=SupplierInsight_TC85, Iteration=Iteration1, DataSheet=SupplierInsight_TestData, SuiteFileName=C:\Users\1034567\Documents\PowerBI_UIAutomation\test-data\ExecutionController.xlsx}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseTestNGExecutor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:21:43 IST" name="afterMethod" finished-at="2022-09-01T20:21:44 IST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BaseTestNGExecutor on [BaseTestNG passed=0 failed=0 skipped=0] status=SUCCESS method=BaseTestNG.BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]] output={null}]]]>
=======
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:46:39 IST" name="afterMethod" finished-at="2022-09-01T16:46:39 IST" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BaseTestNGExecutor on [BaseTestNG passed=0 failed=0 skipped=0] status=FAILURE method=BaseTestNG.BaseTestNGExecutor(java.util.List)[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]] output={null}]]]>
>>>>>>> b919795a66c20e6d87a3a7732d06e87b45586ef7
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
<<<<<<< HEAD
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T20:21:44 IST" name="afterSuite" finished-at="2022-09-01T20:21:44 IST" duration-ms="456" status="PASS">
=======
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:[BaseTestNG passed=0 failed=0 skipped=0]]" started-at="2022-09-01T16:46:39 IST" name="afterSuite" finished-at="2022-09-01T16:46:40 IST" duration-ms="699" status="PASS">
>>>>>>> b919795a66c20e6d87a3a7732d06e87b45586ef7
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testlogic.BaseTestNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
